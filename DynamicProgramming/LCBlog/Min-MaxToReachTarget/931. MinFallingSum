class Solution {
public:
        int minFallingPathSum(vector<vector<int>>& A) {
            int rowSize = A.size(), colSize = A[0].size(), res = INT_MAX;
            
            vector<vector<int>> dp(rowSize, vector<int>(colSize, 0));

            for(int i = 0; i < colSize; i++)
                dp[0][i] = A[0][i];        

            for(int i = 1; i < rowSize; i++)
            {
                for(int j = 0; j < colSize; j++)
                {
                    int temp;
    
                    if(j == 0)
                        temp = min(dp[i-1][j], dp[i-1][j+1]);
                    else if(j == (colSize - 1) )
                        temp = min(dp[i-1][j], dp[i-1][j-1]);
                    else
                        temp = min(dp[i-1][j], min(dp[i-1][j-1], dp[i-1][j+1]));

                    dp[i][j] = A[i][j] + temp;
                }
            }
            
            for(int i = 0; i < colSize; i++)
                res = min(res, dp[rowSize-1][i]);

            return res;
    }
};
